오버라이딩 - 조상 클래스로부터 상속받은 메서드의 내용을 변경하는 것

오버라이딩 기본 조건
    1. 메서드 이름이 같아야 한다.
    2. 매개변수가 같아야 한다.
    3. return type이 같아야 한다. (오버로딩의 return type 조건과 다르다.)
       단 JDK 1.5부터 공변 반환타입이 추가되어 반환타입을 자손 클래스의 타입으로 변경하는 것은 가능하도록 조건이 완화 되었다.
       (공변 반환 타입 - 조상 메서드가 조상 클래스 타입을 반환할 때 오버라이팅 되는 자손 메서드가 자손 클래스 타입을 반환할 수 있는것. 제한된 조건으로 모든 반환타입을 변경할 수 있는게 아님.)

오버라이딩 변경 조건
    1. 접근 제한자는 조상 클래스 메서드 보다 넓은 범위로만 변경 가능
        --> 다형성을 이용하여 조상 클래스 타입 변수에 자식 인스턴스를 저장 할 수 있는데
            이때 컴파일러가 판단하는 호출 가능한 메서드 기준은 조상 클래스 타입에 지정된 정보이다. 물론 실제 호출은 자식 인스턴스 메서드가 호출된다.
            조상 메서드 타입을 보고 호출 가능하다고 판단했는데 실제 인스턴스 메서드 접근 권한이 낮아 실행이 안되는 문제가 발생된다.
            자식 인스턴스 메서드 접근 제한 범위가 더 넓으면 호출에 제한이 없으므로 더 좁은 범위의 접근 제한자로 오버라이딩은 안된다.

    2. 오버라이딩 메서드는 조상 메서드의 예외보다 적거나 같은 개수만 선언 할 수 있다.
        --> 이것도 접근 제한자와 마찬가지로 다형성을 이용하여 조상 변수에 자식 객체를 저장한 경우
            컴파일러가 체크한 예외 타입은 조상 기준인데 실제 호출된 메서드에서 더 많은 예외가 발생되는 문제가 발생한다.
            따라서 예외처리는 자식에서 더 적은 범위로 오버라이딩 되어야 한다.

    ※ 정리 : 오버라이딩 시 접근제한은 더 넒은 범위로만 예외는 더 좁은 범위로만 가능.